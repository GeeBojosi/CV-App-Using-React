{"version":3,"sources":["components/Header.js","editableForms/EditPersonal.js","components/Personal.js","editableForms/EditEducation.js","selectData.js","components/EducationalExp.js","editableForms/EditWork.js","components/WorkHistory.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Component","EditPersonal","props","handleToggle","bind","this","toggleForm","name","lastname","phone","email","onClick","Personal","state","isEditing","first_name","last_name","phone_number","handleChange","handleSubmit","evt","setState","target","value","preventDefault","onSubmit","htmlFor","type","id","onChange","required","pattern","placeholder","EditEducation","select_education","study_name","school_name","month_from","month_to","year_from","year_to","years","months","edOptions","EducationalExp","period_name","checked","map","edLevel","i","month","year","EditWork","job_title","company_name","description","WorkHistory","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87d3e75e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"../styles/Header.css\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Header\">\r\n        <h1>CV App</h1>\r\n        <p>cv app using react</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport \"../styles/Personal.css\";\r\n\r\nclass EditPersonal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n  }\r\n\r\n  handleToggle() {\r\n    this.props.toggleForm()\r\n  }\r\n\r\n  render() {\r\n    const { name, lastname, phone, email } = this.props;\r\n\r\n    return (\r\n      <div className=\"PersonalEdit\">\r\n        <h3>{name} {lastname}</h3>\r\n        <p>{email}</p>\r\n        <p>{phone}</p>\r\n        <div className=\"PersonalEdit-buttons\">\r\n          <button onClick={this.handleToggle}>\r\n            <i className=\"fas fa-pen\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n};\r\n\r\nexport default EditPersonal;\r\n\r\n// job_title={job_title}\r\n//           company_name={company_name}\r\n//           year_from={year_from}\r\n//           month_from={month_from}\r\n//           year_to={year_to}\r\n//           month_to={month_to}","import React, { Component } from 'react';\r\nimport EditPersonal from \"../editableForms/EditPersonal\";\r\nimport \"../styles/Personal.css\";\r\n\r\nclass Personal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditing: true,\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      phone_number: \"\",\r\n      email: \"\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.toggleForm = this.toggleForm.bind(this);\r\n  };\r\n\r\n  handleChange(evt) {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    this.setState({ isEditing: !this.state.isEditing })\r\n  };\r\n\r\n  toggleForm() {\r\n    this.setState({ isEditing: !this.state.isEditing });\r\n  }\r\n\r\n  render() {\r\n    let results;\r\n    const { first_name, last_name, phone_number, email } = this.state;\r\n    if (!this.state.isEditing) {\r\n      results = (\r\n        <EditPersonal\r\n          name={first_name}\r\n          lastname={last_name}\r\n          phone={phone_number}\r\n          email={email}\r\n          toggleForm={this.toggleForm}\r\n        />\r\n      )\r\n    } else {\r\n      results = (\r\n        <div className=\"Personal\">\r\n          <h2>Personal Information:</h2>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <label htmlFor=\"first_name\">First Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"first_name\"\r\n              name=\"first_name\"\r\n              value={this.state.first_name}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n\r\n            <label htmlFor=\"last_name\">Last Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"last_name\"\r\n              name=\"last_name\"\r\n              value={this.state.last_name}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n\r\n            <label htmlFor=\"phone_number\">Phone Number:</label>\r\n            <input\r\n              type=\"tel\"\r\n              id=\"phone_number\"\r\n              name=\"phone_number\"\r\n              value={this.state.phone_number}\r\n              onChange={this.handleChange}\r\n              pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{3}\" required\r\n              placeholder=\"123-45-6789\"\r\n              onChange={this.handleChange}\r\n            />\r\n\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={this.state.email}\r\n              placeholder=\"email@address.com\"\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n            <button>Submit</button>\r\n          </form>\r\n        </div >\r\n      )\r\n    }\r\n    return results;\r\n  };\r\n};\r\n\r\nexport default Personal;","import React, { Component } from 'react';\r\n\r\nclass EditEducation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n  }\r\n\r\n  handleToggle() {\r\n    this.props.toggleForm();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      select_education,\r\n      study_name,\r\n      school_name,\r\n      month_from,\r\n      month_to,\r\n      year_from,\r\n      year_to\r\n    } = this.props;\r\n    return (\r\n      <div className=\"EducationEdit\">\r\n        <hr />\r\n        <h3 className=\"EducationEdit-title\">Education</h3>\r\n        <h3>{select_education} in {study_name}</h3>\r\n        <p>{school_name}</p>\r\n        <p>{month_from} {year_from} to {month_to} {year_to}</p>\r\n        <div className=\"EducationEdit-buttons\">\r\n          <button onClick={this.handleToggle}>\r\n            <i className=\"fas fa-pen\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditEducation;\r\n","const years = [\r\n  null, 2031,\r\n  2030, 2029,\r\n  2028, 2027,\r\n  2026, 2025,\r\n  2024, 2023,\r\n  2022, 2021,\r\n  2020, 2019,\r\n  2018, 2017,\r\n  2016, 2015,\r\n  2014, 2013,\r\n  2012, 2011,\r\n  2010, 2009,\r\n  2008, 2007,\r\n  2006, 2005,\r\n  2004, 2003,\r\n  2002, 2001,\r\n  2000, 1999,\r\n  1998, 1997,\r\n  1996, 1995,\r\n  1994, 1993,\r\n  1992, 1991,\r\n  1990, 1989,\r\n  1988, 1987,\r\n  1986, 1985,\r\n  1984, 1983,\r\n  1982, 1981,\r\n  1980, 1979,\r\n  1978, 1977,\r\n  1976, 1975,\r\n  1974, 1973,\r\n  1972, 1971,\r\n  1970, 1969,\r\n  1968, 1967,\r\n  1966, 1965,\r\n  1964, 1963,\r\n  1962, 1961\r\n];\r\n\r\n{/* <option value>Month:</option>\r\n<option value=\"JANUARY\">JANUARY</option>\r\n<option value=\"FEBRUARY\">FEBRUARY</option>\r\n<option value=\"MARCH\">MARCH</option>\r\n<option value=\"APRIL\">APRIL</option>\r\n<option value=\"MAY\">MAY</option>\r\n<option value=\"JUNE\">JUNE</option>\r\n<option value=\"JULY\">JULY</option>\r\n<option value=\"AUGUST\">AUGUST</option>\r\n<option value=\"SEPTEMBER\">SEPTEMBER</option>\r\n<option value=\"OCTOBER\">OCTOBER</option>\r\n<option value=\"NOVEMBER\">NOVEMBER</option>\r\n<option value=\"DECEMBER\">DECEMBER</option> */}\r\n\r\nconst months = [\r\n  null,\r\n  \"JANUARY\",\r\n  \"FEBRUARY\",\r\n  \"MARCH\",\r\n  \"APRIL\",\r\n  \"MAY\",\r\n  \"JUNE\",\r\n  \"JULY\",\r\n  \"AUGUST\",\r\n  \"SEPTEMBER\",\r\n  \"OCTOBER\",\r\n  \"NOVEMBER\",\r\n  \"DECEMBER\"\r\n]\r\n\r\nconst edOptions = [\r\n  null,\r\n  \"Grade12\",\r\n  \"Diploma\",\r\n  \"Degree\",\r\n  \"Honors\",\r\n  \"Masters\",\r\n  \"Doctorate\"\r\n]\r\n\r\nexport { years, months, edOptions }","import React, { Component } from 'react';\r\nimport EditEducation from \"../editableForms/EditEducation\";\r\nimport { months, years, edOptions } from \"../selectData\";\r\nimport \"../styles/Education.css\";\r\n\r\nclass EducationalExp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditing: true,\r\n      select_education: \"\",\r\n      school_name: \"\",\r\n      study_name: \"\",\r\n      period_name: false,\r\n      month_from: \"\",\r\n      month_to: \"\",\r\n      year_from: \"\",\r\n      year_to: \"\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.toggleForm = this.toggleForm.bind(this);\r\n  };\r\n\r\n  handleChange(evt) {\r\n    const value = evt.target.type === \"checkbox\" ? evt.target.checked : evt.target.value;\r\n    this.setState({\r\n      [evt.target.name]: value,\r\n    })\r\n  };\r\n\r\n  handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    this.setState({ isEditing: !this.state.isEditing })\r\n  }\r\n\r\n  toggleForm() {\r\n    this.setState({ isEditing: !this.state.isEditing });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      select_education,\r\n      study_name,\r\n      school_name,\r\n      month_from,\r\n      year_from,\r\n      month_to,\r\n      year_to\r\n    } = this.state;\r\n\r\n    let results;\r\n    if (!this.state.isEditing) {\r\n      results = <EditEducation\r\n        select_education={select_education}\r\n        study_name={study_name}\r\n        school_name={school_name}\r\n        month_from={month_from}\r\n        month_to={month_to}\r\n        year_from={year_from}\r\n        year_to={year_to}\r\n        toggleForm={this.toggleForm}\r\n      />\r\n    } else {\r\n      results = (\r\n        <div className=\"Education\">\r\n          <h2>Education</h2>\r\n          <form onSubmit={this.handleSubmit}>\r\n            {/* add value={this.state.xxxx} */}\r\n            <label htmlFor=\"select_education\">Level of Education: </label>\r\n            <select name=\"select_education\" id=\"select_education\" value={this.state.select_education} onChange={this.handleChange}>\r\n              {edOptions.map((edLevel, i) => (\r\n                <option value={edLevel} key={i}>{edLevel}</option>\r\n              ))}\r\n            </select>\r\n            <label htmlFor=\"school_name\">School or University: </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"school_name\"\r\n              id=\"school_name\"\r\n              value={this.state.school_name}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n            <label htmlFor=\"study_name\">Field of Study: </label>\r\n            <input type=\"text\" name=\"study_name\" id=\"study_name\" value={this.state.study_name} onChange={this.handleChange} />\r\n            {/*  */}\r\n\r\n            <label htmlFor=\"month_from\">From:</label>\r\n            <select name=\"month_from\" id=\"month_from\" value={this.state.month_from} onChange={this.handleChange}>\r\n              {months.map((month, i) => (\r\n                <option value={month} key={i}>{month}</option>\r\n              ))}\r\n            </select>\r\n            <select name=\"year_from\" id=\"year_form\" value={this.state.year_from} onChange={this.handleChange}>\r\n              {years.map(year => (\r\n                <option value={year} key={year}>{year}</option>\r\n              ))}\r\n            </select>\r\n\r\n            <label htmlFor=\"month_to\">To:</label>\r\n            <select name=\"month_to\" id=\"month_to\" value={this.state.month_to} onChange={this.handleChange}>\r\n              {months.map((month, i) => (\r\n                <option value={month} key={i}>{month}</option>\r\n              ))}\r\n            </select>\r\n            <select name=\"year_to\" id=\"year_to\" value={this.state.year_to} onChange={this.handleChange}>\r\n              {years.map(year => (\r\n                <option value={year} key={year}>{year}</option>\r\n              ))}\r\n            </select>\r\n            <button>Submit</button>\r\n          </form>\r\n        </div>\r\n      )\r\n    }\r\n    return results;\r\n  };\r\n}\r\nexport default EducationalExp;\r\n","import React, { Component } from 'react';\r\n\r\nclass EditWork extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n  }\r\n\r\n  handleToggle() {\r\n    this.props.toggleForm()\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      job_title,\r\n      company_name,\r\n      year_from,\r\n      month_from,\r\n      year_to,\r\n      month_to,\r\n      description\r\n    } = this.props;\r\n    return (\r\n      <div className=\"WorkHistoryEdit\">\r\n        <hr />\r\n        <h3 className=\"WorkHistoryEdit-title\">Work Experience</h3>\r\n        <h3>{job_title}</h3>\r\n        <p>{company_name}</p>\r\n        <p>{year_from} {month_from} to {year_to} {month_to}</p>\r\n        <p>{description}</p>\r\n        <div className=\"WorkHistoryEdit-buttons\">\r\n          <button onClick={this.handleToggle}>\r\n            <i className=\"fas fa-pen\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n};\r\n\r\nexport default EditWork;","import React, { Component } from 'react';\r\nimport EditWork from \"../editableForms/EditWork\";\r\nimport { months, years, edOptions } from \"../selectData\";\r\nimport \"../styles/WorkHistory.css\";\r\n\r\nclass WorkHistory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditing: true,\r\n      job_title: \"\",\r\n      company_name: \"\",\r\n      description: \"\",\r\n      period_name: false,\r\n      month_from: \"\",\r\n      month_to: \"\",\r\n      year_from: \"\",\r\n      year_to: \"\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.toggleForm = this.toggleForm.bind(this);\r\n  };\r\n\r\n  handleChange(evt) {\r\n    const value = evt.target.type === \"checkbox\" ? evt.target.checked : evt.target.value;\r\n    this.setState({\r\n      [evt.target.name]: value,\r\n    })\r\n  };\r\n\r\n  handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    this.setState({ isEditing: !this.state.isEditing })\r\n  }\r\n\r\n  toggleForm() {\r\n    this.setState({ isEditing: !this.state.isEditing });\r\n  }\r\n\r\n  render() {\r\n    let results;\r\n    const { job_title,\r\n      company_name,\r\n      year_from,\r\n      month_from,\r\n      year_to,\r\n      month_to,\r\n      description\r\n    } = this.state;\r\n\r\n    if (!this.state.isEditing) {\r\n      results = (\r\n        <EditWork\r\n          job_title={job_title}\r\n          company_name={company_name}\r\n          year_from={year_from}\r\n          month_from={month_from}\r\n          year_to={year_to}\r\n          month_to={month_to}\r\n          description={description}\r\n          toggleForm={this.toggleForm}\r\n        />\r\n      )\r\n    } else {\r\n      results = (\r\n        <div className=\"WorkHistory\">\r\n          <h2>Work Experience</h2>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <label htmlFor=\"job_title\">Job Title: </label>\r\n            <input type=\"type\" name=\"job_title\" value={this.state.job_title} onChange={this.handleChange} required/>\r\n            <label htmlFor=\"company_name\">Company Name: </label>\r\n            <input type=\"text\" name=\"company_name\" value={this.state.company_name} onChange={this.handleChange} required/>\r\n            <label htmlFor=\"\">Description: </label>\r\n            <textarea\r\n              name=\"description\"\r\n              value={this.state.description}\r\n              placeholder=\"Write Something...\"\r\n              onChange={this.handleChange}\r\n            >\r\n            </textarea>\r\n         \r\n            <label htmlFor=\"month_from\">From:</label>\r\n            <select name=\"month_from\" id=\"month_form\" value={this.state.month_from} onChange={this.handleChange}>\r\n              {months.map((month, i) => (\r\n                <option value={month} key={i}>{month}</option>\r\n              ))}\r\n            </select>\r\n            <select name=\"year_from\" id=\"year_form\" value={this.state.year_from} onChange={this.handleChange}>\r\n              {years.map(year => (\r\n                <option value={year} key={year}>{year}</option>\r\n              ))}\r\n            </select>\r\n\r\n            <label htmlFor=\"month_to\">To:</label>\r\n            <select name=\"month_to\" id=\"month_to\" value={this.state.month_to} onChange={this.handleChange}>\r\n              {months.map((month, i) => (\r\n                <option value={month} key={i}>{month}</option>\r\n              ))}\r\n            </select>\r\n            <select name=\"year_to\" id=\"year_to\" value={this.state.year_to} onChange={this.handleChange}>\r\n              {years.map(year => (\r\n                <option value={year} key={year}>{year}</option>\r\n              ))}\r\n            </select>\r\n            <button>Submit</button>\r\n          </form>\r\n        </div>\r\n      )\r\n    }\r\n    return results;\r\n  };\r\n};\r\n\r\nexport default WorkHistory;\r\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Personal from \"./components/Personal\";\nimport EducationalExp from \"./components/EducationalExp\";\nimport './App.css';\nimport WorkHistory from \"./components/WorkHistory\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\" >\n        <Header />\n        <Personal />\n        <EducationalExp />\n        <WorkHistory />\n      </div>\n    );\n  };\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}